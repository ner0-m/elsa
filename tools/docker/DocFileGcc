ARG UBUNTU_VERSION=20.04

# Take the base image with CMake and Intel MKL
FROM elsa/cmake:${UBUNTU_VERSION} as copy-cmake
MAINTAINER Tobias Lasser <lasser@in.tum.de>
MAINTAINER David Frank <frankd@in.tum.de>
 
FROM elsa/base:${UBUNTU_VERSION} as base 
COPY --from=copy-cmake /tmp/cmake-install /usr/local
  
ARG UBUNTU_VERSION 
RUN echo "${UBUNTU_VERSION}"
RUN cat /etc/issue 

LABEL Description="GCC image on Debian with cmake/git"

ARG COMPILER_VERSION

RUN apt update && apt upgrade -qqy \
 && apt --no-install-recommends install build-essential software-properties-common -qqy \
 && apt --no-install-recommends install gcc-${COMPILER_VERSION} g++-${COMPILER_VERSION} -qqy \
 && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${COMPILER_VERSION} 100 --slave /usr/bin/g++ g++ /usr/bin/g++-${COMPILER_VERSION} \
 && update-alternatives --config gcc && ldconfig \
 && rm -rf /var/lib/apt/lists/*

ENV CC="gcc-${COMPILER_VERSION}"
ENV CXX="g++-${COMPILER_VERSION}"

FROM base as build-onednn
 
# Add oneDNN install script 
ADD scripts/install_intel-oneDNN.sh /tmp/scripts/install_intel-oneDNN.sh 
 
# Intel oneDNN Versions
ARG ONEDNN_VERSION=1.6.2
RUN /tmp/scripts/install_intel-oneDNN.sh ${ONEDNN_VERSION}

# Final stage with GCC and oneDNN installed
FROM base
COPY --from=build-onednn /tmp/onednn_install /usr/local/

# Add test scripts
ADD tests/test_elsa.sh /tmp/tests/test_elsa.sh

CMD bash

