# Docker image relies on Ubuntu 20.04 packages
# Provide the flag COMPILER_VERSION on the command line using --build-arg
FROM elsa/cmake:20.04 as copy-cmake
MAINTAINER Tobias Lasser <lasser@in.tum.de>
MAINTAINER David Frank <frankd@in.tum.de> 
LABEL Description="Clang image with cmake/git"

# Copy CMake from the cmake image over to here 
FROM elsa/base:20.04 as base
COPY --from=copy-cmake /tmp/cmake-install /usr/local
 
# Install the compiler, libc++, libc++-abi and OpenMP
ARG COMPILER_VERSION
RUN apt update && apt upgrade -qqy \
 && apt --no-install-recommends install build-essential software-properties-common -qqy \
 && apt --no-install-recommends install clang-${COMPILER_VERSION} libc++-${COMPILER_VERSION}-dev \
    libc++abi-${COMPILER_VERSION}-dev libomp-${COMPILER_VERSION}-dev -qqy \
 && update-alternatives --install /usr/bin/clang clang /usr/bin/clang-${COMPILER_VERSION} 100 \
    --slave /usr/bin/clang++ clang++ /usr/bin/clang++-${COMPILER_VERSION} \
 && rm -rf /var/lib/apt/lists/*
  
# Setup enviorment variables, PATH first then C and C++ compilers to clang 
ENV PATH="$PATH:/usr/lib/llvm-${COMPILER_VERSION}/bin/"
ENV CC="clang"
ENV CXX="clang++"

# Stage to build oneDNN 
FROM base as build-onednn
 
# Add oneDNN install script 
ADD scripts/install_intel-oneDNN.sh /tmp/scripts/install_intel-oneDNN.sh 
 
ARG ONEDNN_VERSION=1.6.2
RUN /tmp/scripts/install_intel-oneDNN.sh ${ONEDNN_VERSION}

# Copy oneDNN over to base image 
FROM base as onednn
COPY --from=build-onednn /tmp/onednn_install/ /usr/local/

# Add all the test scripts 
ADD tests/test_elsa.sh /tmp/tests/test_elsa.sh
 
CMD bash
