stages:
- compile
- test
- coverage
- sanitizer
- docs

### job templates ###

.job_template: &nightly_job
  only:
    - schedules


.job_template: &build_job
  stage: compile
  cache: 
    key: "$CI_JOB_NAME"
    paths:
      - build/
      
.job_template: &build_job_artifact
  stage: compile
  cache:
    key: "$CI_JOB_NAME"
    paths:
      - build/
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    paths:
      - build/
    expire_in: 30 mins

.job_template: &test_job_artifact
  script:
    - cd build
    - cmake -DELSA_CREATE_JUNIT_REPORTS=ON ..
    - make
    - ctest
  artifacts:
    reports:
      junit: "build/test_reports/test_*.xml"
    

### compile jobs ###

build-ubuntu:
  <<: *build_job_artifact
  image: elsa/ubuntu:18.04
  script:
    - mkdir -p build
    - cd build
    - cmake ..
    - make -j4
  tags:
    - linux
    - elsa
    
    
build-gcc9:
  <<: *build_job_artifact
  image: elsa/gcc:9
  script:
    - mkdir -p build
    - cd build
    - cmake ..
    - make -j4
  tags:
    - linux
    - elsa
    - gcc
    
build-clang8:
  <<: *build_job_artifact
  image: elsa/clang:8
  script:
    - mkdir -p build
    - cd build
    - cmake .. -DCMAKE_CXX_FLAGS="-stdlib=libc++" -DCMAKE_EXE_LINKER_FLAGS="-lc++abi"
    - make -j4
  tags:
    - linux
    - elsa
    - clang

build-cuda92:
  <<: *build_job_artifact
  image: elsa/cuda:9.2
  script:
    - mkdir -p build
    - cd build
    - cmake ..
    - make -j4
  tags:
    - linux
    - elsa
    - gcc
    - cuda


### test jobs ###

test-ubuntu:
  <<: *test_job_artifact
  stage: test
  image: elsa/ubuntu:18.04
  dependencies: 
    - build-ubuntu
  tags:
    - linux
    - elsa
    
test-gcc9:
  <<: *test_job_artifact
  stage: test
  image: elsa/gcc:9
  dependencies:
    - build-gcc9
  tags:
    - linux
    - elsa
    - gcc
    
test-clang8:
  <<: *test_job_artifact
  stage: test
  image: elsa/clang:8
  dependencies:
    - build-clang8
  tags:
    - linux
    - elsa
    - clang

test-cuda92:
  <<: *test_job_artifact
  stage: test
  image: elsa/cuda:9.2
  dependencies:
    - build-cuda92
  tags:
    - linux
    - elsa
    - gcc
    - cuda


### test coverage ###

test-coverage:
  <<: *nightly_job
  stage: coverage
  image: elsa/cuda:9.2
  script:
    - apt-get update
    - apt-get install -y lcov
    - mkdir -p build
    - cd build
    - cmake -DCMAKE_BUILD_TYPE=Debug -DELSA_COVERAGE=ON ../
    - make all -j4
    - make test_coverage
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME-coverage"
    paths:
      - build/test_coverage/
    expire_in: 30 mins
  tags:
    - linux
    - elsa
    - gcc
    - cuda


### Sanitizers ###

thread-sanitizer:
  <<: *nightly_job
  stage: sanitizer
  image: elsa/cuda:9.2
  script:
    - mkdir -p build
    - cd build
    - cmake -DCMAKE_BUILD_TYPE=Debug -DELSA_SANITIZE_THREAD=ON ..
    - make all -j4
    - ctest # let's run tests for now, we should run apps though as well!
  dependencies:
    - test-cuda92
  tags:
    - linux
    - elsa
    - gcc
    - cuda

address-sanitizer:
  <<: *nightly_job
  stage: sanitizer
  image: elsa/cuda:9.2
  script:
    - mkdir -p build
    - cd build
    - cmake -DCMAKE_BUILD_TYPE=Debug -DELSA_SANITIZE_ADDRESS=ON ..
    - make all -j4
    - ctest # let's run tests for now, we should run apps though as well!
  dependencies:
    - test-cuda92
  tags:
    - linux
    - elsa
    - gcc
    - cuda


### deploy docs and coverage report ###

deploy-docs:
  <<: *nightly_job
  stage: docs
  dependencies:
    - test-coverage
  script:
    - mkdir -p build
    - cd build
    - cmake ..
    - make docs
    - cp -r docs/sphinx/* /var/www/ip/elsadocs/
    - cd ..
    - cp -r build/test_coverage/* /var/www/ip/elsacoverage/
  tags:
    - elsa-docs-deploy
